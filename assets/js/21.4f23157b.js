(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{294:function(t,a,s){t.exports=s.p+"assets/img/git_flow.dfafa1ad.png"},343:function(t,a,s){"use strict";s.r(a);var e=s(13),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git-基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-基础"}},[t._v("#")]),t._v(" GIT 基础")]),t._v(" "),a("h2",{attrs:{id:"_1-git基础流程图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-git基础流程图"}},[t._v("#")]),t._v(" 1. GIT基础流程图")]),t._v(" "),a("p",[a("img",{attrs:{src:s(294),alt:"GIT基础流程图"}})]),t._v(" "),a("h2",{attrs:{id:"_2-git基础配置信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-git基础配置信息"}},[t._v("#")]),t._v(" 2. GIT基础配置信息")]),t._v(" "),a("ul",[a("li",[t._v("查看git 用户配置\n"),a("code",[t._v("cat ~/.gitconfig")]),t._v("      // 全局\n"),a("code",[t._v("cat .git/config")]),t._v("       // 当前项目")]),t._v(" "),a("li",[t._v("配置全局用户\n"),a("code",[t._v('git config --global user.name "用户名"')]),t._v(" "),a("code",[t._v('git config --global user.email "git账号"')])]),t._v(" "),a("li",[t._v("配置别名\n"),a("code",[t._v("git config --global alias.br branch")])]),t._v(" "),a("li",[t._v("删除全局配置\n"),a("code",[t._v("git config --global --unset alias.**")]),t._v(" "),a("code",[t._v("git config --global --unset user.**")])])]),t._v(" "),a("h2",{attrs:{id:"_3-git常用指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-git常用指令"}},[t._v("#")]),t._v(" 3. GIT常用指令")]),t._v(" "),a("h3",{attrs:{id:"git-log"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-log"}},[t._v("#")]),t._v(" git log")]),t._v(" "),a("ul",[a("li",[t._v("查看本地git命令历史\n"),a("code",[t._v("git reflog")])]),t._v(" "),a("li",[t._v("查看本地git关联信息/远端所有关联\n"),a("code",[t._v("git branch -vv")]),t._v(" "),a("code",[t._v("git remote show origin")])]),t._v(" "),a("li",[t._v("查看当前项目git SHA1\n"),a("code",[t._v("git rev-parse head")])])]),t._v(" "),a("h3",{attrs:{id:"git-push"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-push"}},[t._v("#")]),t._v(" git push")]),t._v(" "),a("ul",[a("li",[t._v("本地分支和远程分支进行关联(git push origin branchName === git push)\n"),a("code",[t._v("git push -u origin branchName")])]),t._v(" "),a("li",[t._v("git push <远程主机名> <本地分支名>:<远程分支名>")]),t._v(" "),a("li",[a("code",[t._v("git push -f origin")]),t._v(" 强制提交")])]),t._v(" "),a("h3",{attrs:{id:"git-branch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-branch"}},[t._v("#")]),t._v(" git branch")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("git branch -r | -a | -av")]),t._v(" 查看本地分支/远程分支/本地+远程/查看所有分支并带有最新的commit")]),t._v(" "),a("li",[a("code",[t._v("git checkout -b dev master")]),t._v("  基于 master 分支创建一个 dev 分支，并切换到该分支")]),t._v(" "),a("li",[a("code",[t._v("git branch -m branchname")]),t._v(" 修改当前分支名")]),t._v(" "),a("li",[a("code",[t._v("git brnach -d branchname")]),t._v("  删除本地分支(-D 强制删除)")])]),t._v(" "),a("h3",{attrs:{id:"git-stash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-stash"}},[t._v("#")]),t._v(" git stash")]),t._v(" "),a("p",[t._v("将所有未提交的修改保存至堆栈中(pop:应用后删除记录/apply:应用后不删除记录/drop:直接删除记录)")]),t._v(" "),a("ul",[a("li",[a("code",[t._v('git stash save "储存"')]),t._v(" "),a("code",[t._v('git stash pop "stash@{index}"')])])]),t._v(" "),a("h3",{attrs:{id:"git-tag"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-tag"}},[t._v("#")]),t._v(" git tag")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("git tag v1.0")]),t._v(" 在HEAD上创建一个标签")]),t._v(" "),a("li",[a("code",[t._v('git tag -a v0.1 -m "version 0.1 released"')]),t._v(" 添加标签说明")]),t._v(" "),a("li",[a("code",[t._v("git push origin <tagname> / git push origin --tags")]),t._v("  推送本地某个标签(or全部)至远端")]),t._v(" "),a("li",[a("code",[t._v("git tag -d v0.1")]),t._v(" 删除一个本地标签")]),t._v(" "),a("li",[a("code",[t._v("git push origin :refs/tags/<tagname>")]),t._v(" 删除远端标签(要先删除本地相应标签)")])]),t._v(" "),a("h3",{attrs:{id:"git-删除文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-删除文件"}},[t._v("#")]),t._v(" git 删除文件")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("git rm filename")]),t._v(" 删除暂存区和工作区的文件")]),t._v(" "),a("li",[a("code",[t._v("git rm --cached filename")]),t._v(" 只删除暂存区的文件, 不会删除工作区的文件")])]),t._v(" "),a("h3",{attrs:{id:"git-merge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-merge"}},[t._v("#")]),t._v(" git merge")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("git pull 分支名(要合并branch)")])]),t._v(" "),a("li",[a("code",[t._v("git merge --no-ff")]),t._v(" 禁止快进式合并:会生成一个新的提交，让当前分支的提交历史不会那么乱；")]),t._v(" "),a("li",[a("code",[t._v("git merge --abort")]),t._v(" 接触合并状态")])]),t._v(" "),a("h2",{attrs:{id:"_4-git常用问题及操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-git常用问题及操作"}},[t._v("#")]),t._v(" 4.git常用问题及操作")]),t._v(" "),a("h3",{attrs:{id:"_1-git创建关联"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-git创建关联"}},[t._v("#")]),t._v(" 1. git创建关联")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("目录下")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" git init     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("创建 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("git 文件\ngit remote add origin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("git地址"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("    创建远程仓库\ngit add "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("          git commit "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"注释"')]),t._v("    添加到缓存区\ngit push "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("u origin master               首次关联并提交\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h3",{attrs:{id:"_2-git-关联错远端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-git-关联错远端"}},[t._v("#")]),t._v(" 2. git 关联错远端")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("rm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("rf "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("git    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除 .git 文件")]),t._v("\ngit init\ngit "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"注释"')]),t._v("\ngit remote add origin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("git地址"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建远程仓库")]),t._v("\ngit push "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("u origin master              "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 首次关联并提交")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h3",{attrs:{id:"_3-git-合并-提交-回退-问题-checkout-rebase-reset-revert-cherry-pick"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-git-合并-提交-回退-问题-checkout-rebase-reset-revert-cherry-pick"}},[t._v("#")]),t._v(" 3. git 合并/提交/回退 问题 checkout/rebase/reset/revert/cherry-pick")]),t._v(" "),a("p",[a("code",[t._v("checkout")]),t._v(" 会撤回到 add/commit 版本控制的文件历史"),a("br"),t._v(" "),a("code",[t._v("git checkout <commit_id>")]),t._v(" 切换到摸个指定的 commit版本 切换后会处于游离状态 不会对当前的版本产生影响 用于测试bug问题"),a("br"),t._v(" "),a("code",[t._v("reset --hard/soft <commit_id>")]),t._v(" 会回退版本更改HEAD指针 hard:会完全回退(工作区/暂存区/本地仓库)  soft:回退 暂存区/本地仓库"),a("br"),t._v(" "),a("code",[t._v("rebase")]),t._v(" 使用rebase命令可以使我们的提交历史干净、简洁")]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("不要通过rebase对任何已经提交到公共仓库中的commit进行修改（你自己一个人玩的分支除外 -f）, push报错原因: push 会做简单的fastforword合并,对比commit变化, 但rebase会改变基点是本地和远端产生差异")])]),t._v(" "),a("p",[t._v("通常操作 确保本地分支的commit_id是从要合并的分支拉出的.(如果不是:可通过 "),a("code",[t._v("git reset --soft commit_id(old)")]),t._v(" 回退到) "),a("code",[t._v("rebase branchName")]),t._v(" 有冲突解决 git rebase --continue 继续"),a("br"),t._v(" "),a("code",[t._v("git rebase -i")]),t._v(" 合并提交commit\n"),a("code",[t._v("git revert <commit_id>")]),t._v(" 生成一个撤销指定提交版本的新提交\n"),a("code",[t._v("git cherry-pick <commit_id>")]),t._v(" 将制定的提交 commit应用于当前分支")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("git用户名密码输入错误")]),t._v(" "),a("p",[t._v("在控制面板里找到凭据管理器，选中 Windows 凭据，找到 git 的凭据，点击编辑，输入所用 github 的正确用户名和密码。")])]),t._v(" "),a("h3",{attrs:{id:"_4-git-忽略已提交的文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-git-忽略已提交的文件"}},[t._v("#")]),t._v(" 4.git 忽略已提交的文件")]),t._v(" "),a("p",[a("code",[t._v("git update-index --assume-unchanged <path/fileName>")]),t._v(" 把不想提交的文件忽略"),a("br"),t._v(" "),a("code",[t._v("git update-index --no-assume-unchanged <path/fileName>")]),t._v(" 恢复跟踪"),a("br"),t._v(" "),a("code",[t._v("git ls-files -v")]),t._v(" 查询忽略的列表 开头为标识 小"),a("code",[t._v("h")]),t._v("的文件是 本地提交忽略的文件\n"),a("a",{attrs:{href:"https://git-scm.com/docs/git-ls-files",target:"_blank",rel:"noopener noreferrer"}},[t._v("更多"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"_5-git-规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-git-规范"}},[t._v("#")]),t._v(" 5.git 规范")]),t._v(" "),a("h3",{attrs:{id:"git分支规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git分支规范"}},[t._v("#")]),t._v(" git分支规范")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("feature")]),t._v(" 新功能分支")]),t._v(" "),a("li",[a("code",[t._v("develop")]),t._v(" 开发分支")]),t._v(" "),a("li",[a("code",[t._v("test")]),t._v(" 测试分支")]),t._v(" "),a("li",[a("code",[t._v("release")]),t._v(" 预发布分支")]),t._v(" "),a("li",[a("code",[t._v("issue-**")]),t._v(" bug 分支")]),t._v(" "),a("li",[a("code",[t._v("master")]),t._v(" 发布分支(线上)")])]),t._v(" "),a("h3",{attrs:{id:"git-提交规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-提交规范"}},[t._v("#")]),t._v(" git 提交规范")]),t._v(" "),a("p",[t._v("每次提交，Commit message 都包括三个部分：Header，Body 和 Footer，其中，Header 是必需的，Body 和 Footer 可以省略。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("scope"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("subject"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// type（必需）、scope:影响范围（可选）和subject:概述（必需）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BLANK")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LINE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BLANK")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LINE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("footer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// BREAKING CHANGE:不兼容变动说明    Close #issue-number,issue-number   revert:commit Header(撤销的) SHA")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("ol",[a("li",[a("code",[t._v("type")]),t._v("用于说明 commit 的类别，只允许使用下面7个标识")]),t._v(" "),a("li",[a("code",[t._v("feat")]),t._v("：新功能（feature）")]),t._v(" "),a("li",[a("code",[t._v("fix")]),t._v("：修补bug")]),t._v(" "),a("li",[a("code",[t._v("docs")]),t._v("：文档（documentation）")]),t._v(" "),a("li",[a("code",[t._v("style")]),t._v("： 格式（不影响代码运行的变动）")]),t._v(" "),a("li",[a("code",[t._v("refactor")]),t._v("：重构（即不是新增功能，也不是修改bug的代码变动）")]),t._v(" "),a("li",[a("code",[t._v("test")]),t._v("：增加测试")]),t._v(" "),a("li",[a("code",[t._v("chore")]),t._v("：构建过程或辅助工具的变动")])]),t._v(" "),a("h3",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.im/post/5ee649ff51882542ea2b5108#heading-7",target:"_blank",rel:"noopener noreferrer"}},[t._v("三年 Git 使用心得 & 常见问题整理"),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);